   INCLUDE 'MC9S08JM16.INC' 
	
KBIE	EQU	1
KBACK	EQU	2
KMOD    EQU 0
C0 		EQU 0		;Define bit 0 del PTB como columna C0
C1		EQU 1		;Define bit 1 del PTB como columna C0
C2		EQU 2		;Define bit 2 del PTB como columna C0
C3		EQU 3		;Define bit 3 del PTB como columna C0
C4		EQU 0		;Define bit 0 del PTF como columna C0
C5		EQU 1		;Define bit 1 del PTF como columna C0
C6		EQU 4		;Define bit 4 del PTF como columna C0
C7		EQU 5		;Define bit 5 del PTF como columna C0
CLK		EQU 0		;Define bit 5 del PTC CLK del contador
RESET   EQU 1
LOCK	EQU	6		;Bit 6 del registro MCGSC

		ORG 	0B0H  ;Direccion de RAM  (Variables)
			
CONT      DS 1
TABLERO   DS 21
CUADRO 	  DS 4 
CONTP	  DS 1
FILA_C    DS 1
COLUM_C   DS 1
PUNTAJE   DS 2
PUNTAJE_M DS 2
NIVEL     DS 1  
GAME_OVER DS 1
START     DS 1
PAUSE     DS 1
AUX		  DS 1
AUXX      DS 1
SEM_1	  DS 1
SEM_2	  DS 1
BAJA_R    DS 1

		ORG		0C000H; Direccion de RAM  (Memoria para programa)

INICIO: CLRA
		STA		SOPT1
		LDHX	#4B0H
		TXS
		MOV     #0AAH,MCGTRM
		MOV     #00000110B,MCGC1
		BRCLR	LOCK,	MCGSC,	*
		MOV		#33H,	PTFDD	  ;Configuramos los pines F0,F1,F4,F5	como salidas	
		MOV		#0FH,	PTBDD     ;Configuramos los pines B0,B1,B2,B3	como salidas
		MOV		#03H,	PTCDD	  ;Configuracion del reloj del contador
		MOV		#01110110B, IRQSC 
		MOV		#0H,PTGDD;
		LDA		#0FH			 	;HABILITAR RESISTENCIAS DE PULL UP G2-G3
		STA		PTGPE				;MODIFICA REGISTRO	
		MOV		#11000011B,KBIPE	;HABILITAR INTERRUPCIONES DE PUERTOS
		BSET	KBACK, KBISC
		BSET	KBIE,  KBISC
		MOV     #0H,KBIES
		CLI
			
;----------------Limpia Variables------
		MOV     #1D,AUXX
LIM_V:	MOV     #0D,BAJA_R
		MOV     #0H,PAUSE
		
		MOV		#0H,PTFD
		MOV		#0H,PTBD;
		BCLR    CLK,PTGD;
		LDHX    #21D
		BSET    RESET,PTCD
		LDHX    #3000D     ; Tiempo de 50ms			
		JSR		TIEMPO
		BCLR    RESET,PTCD	
        MOV     #15D,CONT
        
 		MOV     #0H,PUNTAJE_M
		MOV		#0D,SEM_1
		MOV		#0D,SEM_2
		LDA     PUNTAJE_M
		CBEQA   #0,SALTO1
		LDA     SEM_1
		ADD     PUNTAJE_M
SALTO1:	STA     SEM_1
		LDX     #100D
		CLRH
		DIV 
		PSHH
		PULA
		CMP     #11D
		BPL     CMP10_1
		MOV     #19D,SEM_1
CMP10_1:INC     SEM_2
		CLRH
		LDX     #100D
		DIV 
		PSHH
		PULA
		STA 	SEM_2
		CMP     #45D
		BPL     AJUSTE
		MOV     #15D,SEM_2
		
        
AJUSTE: BSET    CLK,PTCD;
		LDHX    #300D     ; Tiempo de 50ms			
		JSR		TIEMPO
		BCLR    CLK,PTCD	
	    LDHX    #300D     ; Tiempo de 50ms	
		JSR		TIEMPO;
		DBNZ    CONT,AJUSTE
		
LIMP:	MOV 	#0FFH,TABLERO;FF
		
		MOV 	#0H,TABLERO+1
		MOV 	#0H,TABLERO+2
		MOV 	#0H,TABLERO+3
		MOV 	#0H,TABLERO+4
		MOV 	#0H,TABLERO+5
		MOV 	#0H,TABLERO+6	
		MOV 	#0H,TABLERO+7
		MOV 	#0H,TABLERO+8
		MOV 	#0H,TABLERO+9
		MOV 	#0H,TABLERO+10
		MOV 	#0H,TABLERO+11
		MOV 	#0H,TABLERO+12
		MOV 	#0H,TABLERO+13
		MOV 	#0H,TABLERO+14
		MOV 	#0H,TABLERO+15
		MOV 	#0H,TABLERO+16;
		
		MOV		#0H,TABLERO+17;0
		MOV		#0H,TABLERO+18;0
		MOV 	#0H,TABLERO+19;0
		MOV 	#0H,TABLERO+20;0
		
		MOV		#20D,FILA_C
		MOV		#7H,COLUM_C;
		
		MOV     #0D,CONT
		MOV		#0FH,CONTP;
		
		LDA     AUXX
		CBEQA   #0H,CICLO
		MOV     #0H,CUADRO+0
		MOV     #0H,CUADRO+1
		MOV     #0H,CUADRO+2
		MOV     #0H,CUADRO+3
;--------------CICLO LETRERO----------
ETIU:   LDX     AUXX
		LDA  	TABLA_T,X
		STA     CUADRO+0
CICLOS:	JSR		VISUAL;
		DBNZ    CONTP,CICLOS;   SALTE A CICLO O HAGA LA LOGICA
		MOV     #1H,AUX       
		JSR 	MOVI
		MOV		#0FH,CONTP;
		LDA     AUXX
		CBEQA   #17D,ETIQ
		JMP     ETIU
ETIQ: 	JSR     VISUAL
		LDA     AUXX
		CBEQA   #0H,LOL
		JMP		ETIQ
LOL:    JMP     LIM_V
;------------------INFINITO---------------------------------
CICLO:	JSR		VISUAL;
		DBNZ    CONTP,CICLO;   SALTE A CICLO O HAGA LA LOGICA
		LDA     BAJA_R
		CBEQA   #1H,VELO
		MOV		#0FFH,CONTP;
		MOV     #1H,AUX  
		LDA		PAUSE  
		CBEQA   #1H,CICLO      
		JSR 	MOVI
		JMP 	CICLO;
		
VELO:   MOV		#02FH,CONTP;
		MOV     #1H,AUX   
		LDA     PAUSE
		CBEQA   #1H,CICLO    
		JSR 	MOVI
END:	JMP 	CICLO;

;-------------------INTERRUPCION IRQ------------------------------------		
INT_IRQ:MOV     #0H,AUXX
		JSR		RANDOM
		JSR		RANDOM
		RTI

;-------------------INTERRUPCION KBI------------------------------------		
INT_KBI:LDA 	PTGD
		AND 	#0FH
		CBEQA   #0EH,IZQ
		CBEQA 	#0DH,DER
		CBEQA   #0BH,ROTAR
		CBEQA   #07H,CAER
SALIR:  BSET	KBACK,KBISC
		RTI
		
IZQ:	BRSET	7H,CUADRO,SALIR
		BRSET	7H,CUADRO+1,SALIR
		BRSET	7H,CUADRO+2,SALIR
		BRSET	7H,CUADRO+3,SALIR
		MOV     #2H,AUX
		JSR     MOVI
		JMP     SALIR	
		
CAER:   MOV     #1H,BAJA_R
		JMP     SALIR

DER:    BRSET	0H,CUADRO,SALIR
		BRSET	0H,CUADRO+1,SALIR
		BRSET	0H,CUADRO+2,SALIR
		BRSET	0H,CUADRO+3,SALIR
		MOV     #0H,AUX
		JSR     MOVI
		JMP     SALIR
			
ROTAR:	LDA     AUXX
		;CBEQA   #0H,SALT2
		MOV     #0H,AUXX
		JSR		RANDOM
		JSR		RANDOM
		JMP     SALIR
SALT2:  LDA		PAUSE
		CBEQA   #0H,PAUSAR
		MOV     #0H,PAUSE
		JMP     SALIR
PAUSAR: MOV     #1H,PAUSE
		JMP     SALIR
;--------MOVIMIENTOS----------------------------
MOVI:	LDA     AUX;
		CBEQA   #1H,DECR
		CBEQA   #2H,MOV_IZ
		LSR     CUADRO
		LSR		CUADRO+1
		LSR     CUADRO+2
	    LSR 	CUADRO+3
	    JMP     N_DEC
MOV_IZ:	LSL     CUADRO
		LSL		CUADRO+1
		LSL     CUADRO+2
	    LSL 	CUADRO+3
	    JMP     N_DEC
DECR:	DEC		FILA_C;
N_DEC:	LDX		FILA_C;
		LDA		TABLERO,X
		LDX		#0H;
		AND		CUADRO,X
		CBEQA	#0H,MAJ1
		LDA     AUX
		CBEQA   #1H,MREG
		CBEQA   #2H,MREG2
		JMP		MREG1
MAJ1:	LDX		FILA_C;
		DECX		  ;
		LDA		TABLERO,X
		LDX		#1H;
		AND		CUADRO,X
		CBEQA	#0H,MAJ2		
		LDA     AUX
		CBEQA   #1H,MREG
		CBEQA   #2H,MREG2
		JMP		MREG1
MAJ2:	LDX		FILA_C;
		DECX		  ;
		DECX		  ; 
		LDA		TABLERO,X
		LDX		#2H;
		AND		CUADRO,X
		CBEQA	#0H,MAJ3		
		LDA     AUX
		CBEQA   #1H,MREG
    	CBEQA   #2H,MREG2
		JMP		MREG1	
MAJ3:	LDX		FILA_C;
		DECX		  ;
		DECX
		DECX
		LDA		TABLERO,X
		LDX		#3H;
		AND		CUADRO,X
		CBEQA	#0H,MORTS		
		LDA     AUX
		CBEQA    #1H,MREG
	    CBEQA   #2H,MREG2
		JMP		MREG1
MORTS:	RTS				; POSICION VALIDA REGRESA PARA VISUALIZAR	
MREG1:  LSL		CUADRO
		LSL		CUADRO+1
		LSL		CUADRO+2
		LSL		CUADRO+3
		RTS
MREG2:  LSR		CUADRO
		LSR		CUADRO+1
		LSR		CUADRO+2
		LSR		CUADRO+3
		RTS
MREG: 	INC		FILA_C	;
		LDX		FILA_C
		LDA		TABLERO,X
		ORA		CUADRO;
		STA		TABLERO,X
		DEC		FILA_C		;DECREMENTA FILA PARA GUARDAR PERDIENDO PIBOTE 
		LDX		FILA_C		;
		LDA		TABLERO,X
		ORA		CUADRO+1;
		STA		TABLERO,X
		DEC		FILA_C		;DECREMENTA FILA PARA GUARDAR PERDIENDO PIBOTE 
		LDX		FILA_C		;
		LDA		TABLERO,X
		ORA		CUADRO+2;
		STA		TABLERO,X
		DEC		FILA_C		;DECREMENTA FILA PARA GUARDAR PERDIENDO PIBOTE 
		LDX		FILA_C		;
		LDA		TABLERO,X
		ORA		CUADRO+3;
		STA		TABLERO,X
		MOV		#20D,FILA_C	;
		MOV		#2H,COLUM_C	;
		MOV     #0H,BAJA_R
		LDA     AUXX
		CBEQA   #0H,RAN
		INC     AUXX
		RTS
RAN:	JSR     RANDOM
		RTS			
		
;----------------CICLO VISUAL-----------	
 VISUAL:LDA		FILA_C		
		CBEQ	CONT,VPR	;F+3
		DECA
		CBEQ	CONT,VPR	;F+2
		DECA
		CBEQ	CONT,VPR	;F+1
		DECA
		CBEQ	CONT,VPR	;F+0
CICLOV: CLRH
		INC     CONT
		LDX     CONT
		CBEQX   #11H,TOO
		
		LDA     TABLERO,X
DIB:    CLRH
		STA     PTBD
		STA		AUX			;
		MOV		#0H,PTFD	;
    	BRCLR	4,AUX,AJ1	;
		BSET	0,PTFD		;
AJ1:	BRCLR	5,AUX,AJ2
		BSET	1,PTFD
AJ2:	BRCLR	6,AUX,AJ3
		BSET	4,PTFD
AJ3:	BRCLR	7,AUX,AJ4
		BSET	5,PTFD	
AJ4:	BSET    CLK,PTCD;
		LDHX    #500D     ; Tiempo de 50ms			
		JSR		TIEMPO
		BCLR    CLK,PTCD	
	    LDHX    #500D     ; Tiempo de 50ms	
		JSR		TIEMPO;
	    RTS
TOO:    MOV     #0D,CONT
		RTS
VPR:    LDA		FILA_C		;	
		SUB     CONT		;
		PSHA				;PONE EN LA PILA Z
		LDX		CONT		;CARGA X CON CONTADOR	
		INCX
		LDA		TABLERO,X	;X NO SE MODIFICA 
		PULX		
		ORA		CUADRO,X	;INCREMENTO PARA COLUMNA+3 EN A 
		INC     CONT
		LDX     CONT
		CBEQX   #11H,TOO
		JMP     DIB
;--------INICIO RUTINA DE TIEMPO------------------------------
TIEMPO: AIX		#-1D         ; resta 1 a HX
		CPHX	#0H          ; compara HX con 0
		BNE		TIEMPO       ; Si hx es igual a 0 sigue
		RTS                  ; retorna		
;----------------------RANDOM-------------------------
RANDOM: INC     SEM_1
		LDA		SEM_1
		LDX		SEM_2
		MUL
		PSHX
		PULH
		LDX		#100D
		DIV
		PSHH
		
		LDX		#10D
		CLRH
		DIV
		PSHH
		PULA
		MUL
		MOV		SEM_2,SEM_1
		STA		SEM_2
		PULA
		CLRH
		LDX		#10D
		DIV
		PSHA
		ADD		SEM_2
		STA		SEM_2
		PULA
		CBEQA   #0H,SAL_F0
		CBEQA   #1H,SAL_F1
		CBEQA   #2H,SAL_F2
		CBEQA   #3H,SAL_F3
		CBEQA   #4H,SAL_F4
		CBEQA   #5H,SAL_F5
		CBEQA   #6H,SAL_F6
		JMP 	RANDOM
SAL_F0: MOV    #00001000B,CUADRO
		MOV    #00011000B,CUADRO+1
		MOV    #00010000B,CUADRO+2
		MOV    #00000000B,CUADRO+3
		RTS
SAL_F1: MOV    #00010000B,CUADRO
		MOV    #00011000B,CUADRO+1
		MOV    #00001000B,CUADRO+2
		MOV    #00000000B,CUADRO+3
		RTS
SAL_F2: MOV    #00000000B,CUADRO
		MOV    #00011000B,CUADRO+1
		MOV    #00011000B,CUADRO+2
		MOV    #00000000B,CUADRO+3
		RTS

SAL_F3: MOV    #00010000B,CUADRO
		MOV    #00010000B,CUADRO+1
		MOV    #00011000B,CUADRO+2
		MOV    #00000000B,CUADRO+3
		RTS

SAL_F4: MOV    #00010000B,CUADRO
		MOV    #00010000B,CUADRO+1
		MOV    #00110000B,CUADRO+2
		MOV    #00000000B,CUADRO+3
		RTS

SAL_F5: MOV    #00010000B,CUADRO
		MOV    #00010000B,CUADRO+1
		MOV    #00010000B,CUADRO+2
		MOV    #00010000B,CUADRO+3
		RTS

SAL_F6: MOV    #00000000B,CUADRO
		MOV    #00001000B,CUADRO+1
		MOV    #00011100B,CUADRO+2
		MOV    #00000000B,CUADRO+3
		RTS



TABLA_T:FCB 0FFH,238D,132D,228D,46D,224D,82D,82D,50D,82D,119D
		FCB 228D,36D,228D,36D,238D,128D
		
			
;------POSICION DE INICIO----------------------------------
		ORG		0FFCCH
		FDB		INT_KBI
		
		ORG		0FFFAH
		FDB		INT_IRQ

		ORG     0FFFEH
		FDB		INICIO
		
